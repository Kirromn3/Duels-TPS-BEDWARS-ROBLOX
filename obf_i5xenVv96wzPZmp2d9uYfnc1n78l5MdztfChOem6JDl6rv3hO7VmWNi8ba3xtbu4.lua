
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (4==v17) then function v24()local v38=v23();local v39=v23();return (( -((2 + 0) -(786 -(172 + 614))) * v20(v39,1270 -(279 + 959))) + 1 + 0) * ((2 + 0)^(v20(v39,78 -(13 + 44),49 -18) -(503 + 520))) * ((((v20(v39,1 + 0,73 -53) * ((7 -5)^((47 -28) + 13))) + v38)/((1939 -(231 + 1706))^((1581 -(351 + 920)) -(81 + 177)))) + 1);end v25=nil;function v25(v30)local v40=(687 -(403 + 284)) + 0;local v41;local v42;while true do if (v40==(2 + 0)) then v42={};for v66=1 -0, #v41 do v42[v66]=v2(v1(v3(v41,v66,v66)));end v40=(1875 -(454 + 41)) -(232 + 1145);end if (0==v40) then v41=nil;if  not v30 then local v71=61 -(43 + 18);while true do if (v71==(0 + 0)) then v30=v23();if (v30==(0 -0)) then return "";end break;end end end v40=1304 -(1146 + 157);end if (v40==(20 -((34 -20) + 3))) then return v6(v42);end if (v40==(321 -(288 + 32))) then v41=v3(v15,v18,(v18 + v30) -(1414 -(630 + (1141 -358))));v18=v18 + v30;v40=1 + 1;end end end v17=5;end if (v17==1) then v20=nil;function v20(v31,v32,v33)if v33 then local v62=0;local v63;while true do if (v62==(0 -0)) then v63=(v31/((6 -4)^(v32-(598 -(564 + 33)))))%((3 -(1810 -(489 + 1320)))^(((v33-1) -(v32-(1 -0))) + ((2184 -746) -(618 + 819))));return v63-(v63%((2770 -1593) -(95 + 1081)));end end else local v64=2^(v32-(1 -0));return (((v31%(v64 + v64))>=v64) and (2 -1)) or (0 + 0);end end v21=nil;v17=2;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v34)if (v1(v34,2)==79) then v19=v0(v3(v34,1,1));return "";else local v65=v2(v0(v34,16));if v19 then local v68=v5(v65,v19);v19=nil;return v68;else return v65;end end end);v17=1;end if (v17==6) then v28=nil;function v28()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;local v50;while true do if ((1785 -(1730 + 55))==v43) then v44=0 -0;v45=nil;v43=1 + 0;end if (v43~=(2 -0)) then else v48=nil;v49=nil;v43=14 -11;end if (v43==3) then v50=nil;while true do local v69=0;local v70;while true do if (v69==(0 + 0)) then v70=0 -0;while true do if (v70~=(1 + 0)) then else if (v44~=2) then else local v96=0 -0;local v97;while true do if (v96~=(0 -0)) then else v97=0 -0;while true do local v102=0;while true do if (v102~=0) then else if (v97~=0) then else local v124=0 + 0;while true do if (v124==(0 -0)) then for v179=1 + 0,v23() do local v180=0;local v181;local v182;local v183;while true do if (v180~=(2 -1)) then else v183=nil;while true do if ((1124 -(616 + 507))==v181) then while true do if (v182==(0 + 0)) then v183=v21();if (v20(v183,1 + 0,1 + 0)==0) then local v241=0;local v242;local v243;local v244;local v245;local v246;while true do if (v241==(0 -0)) then v242=0;v243=nil;v241=1;end if (1==v241) then v244=nil;v245=nil;v241=1 + 1;end if (v241==2) then v246=nil;while true do if (v242==2) then while true do if ((8 -5)~=v243) then else if (v20(v245,795 -(172 + 620),8 -5)~=1) then else v246[4]=v50[v246[6 -2]];end v45[v179]=v246;break;end if (v243~=0) then else local v255=0;local v256;while true do if (v255~=0) then else v256=0;while true do if (v256~=1) then else v243=1 + 0;break;end if (v256==0) then local v263=1299 -(387 + 912);while true do if (v263==(166 -(81 + 85))) then v244=v20(v183,1151 -(921 + 228),1043 -(965 + 75));v245=v20(v183,4,5 + 1);v263=1;end if (1==v263) then v256=1;break;end end end end break;end end end if (v243==(1 + 1)) then local v257=0 + 0;local v258;while true do if (v257~=0) then else v258=0 -0;while true do if (v258~=(1457 -(85 + 1371))) then else v243=1540 -(87 + 1450);break;end if (v258==0) then if (v20(v245,1,193 -(73 + 119))==(1 + 0)) then v246[167 -(98 + 67)]=v50[v246[577 -(75 + 500)]];end if (v20(v245,2 -0,5 -3)~=1) then else v246[3 + 0]=v50[v246[2 + 1]];end v258=1;end end break;end end end if (v243~=(3 -2)) then else v246={v22(),v22(),nil,nil};if (v244==(0 -0)) then local v260=0 + 0;local v261;while true do if ((349 -(44 + 305))~=v260) then else v261=1276 -(132 + 1144);while true do if (v261~=0) then else v246[7 -4]=v22();v246[13 -9]=v22();break;end end break;end end elseif (v244==1) then v246[4 -1]=v23();elseif (v244==(937 -(468 + 467))) then v246[1 + 2]=v23() -(2^(50 -34));elseif (v244~=3) then else local v269=0;local v270;while true do if (v269==(0 + 0)) then v270=1943 -(1654 + 289);while true do if (v270~=0) then else v246[614 -(532 + 79)]=v23() -((984 -(654 + 328))^16);v246[4]=v22();break;end end break;end end end v243=2;end end break;end if (v242~=0) then else local v250=217 -(109 + 108);while true do if (1~=v250) then else v242=1;break;end if (v250==(0 + 0)) then v243=28 -(27 + 1);v244=nil;v250=1 + 0;end end end if (v242==1) then local v251=0 -0;while true do if (v251~=1) then else v242=2;break;end if (v251~=(0 -0)) then else v245=nil;v246=nil;v251=1013 -(655 + 357);end end end end break;end end end break;end end break;end if (v181==0) then local v214=0;while true do if (1==v214) then v181=1 -0;break;end if (v214==(0 -0)) then local v227=0;while true do if (v227~=0) then else v182=0 -0;v183=nil;v227=1173 -(202 + 970);end if (1==v227) then v214=1 + 0;break;end end end end end end break;end if (v180~=0) then else v181=0 -0;v182=nil;v180=1;end end end for v184=1,v23() do v46[v184-1]=v28();end v124=1;end if (v124~=(2 -1)) then else v97=2 -1;break;end end end if (v97==(1 + 0)) then local v125=0 -0;while true do if (v125==(0 -0)) then for v186=1,v23() do v47[v186]=v23();end return v48;end end end break;end end end break;end end end break;end if (v70==(882 -(496 + 386))) then local v92=0;while true do if (v92~=0) then else if (v44~=1) then else local v98=0;local v99;while true do if (v98~=0) then else v99=0;while true do if (v99==(0 + 0)) then local v126=0 + 0;while true do if (v126~=0) then else v49=v23();v50={};v126=1;end if ((1110 -(283 + 826))==v126) then v99=1;break;end end end if (v99==1) then for v162=30 -(6 + 23),v49 do local v163=1677 -(860 + 817);local v164;local v165;local v166;while true do if (v163==(923 -(125 + 797))) then v166=nil;while true do if (v164==(1722 -(7 + 1714))) then if (v165==1) then v166=v21()~=0;elseif (v165==2) then v166=v24();elseif (v165==3) then v166=v25();end v50[v162]=v166;break;end if (v164==0) then v165=v21();v166=nil;v164=3 -2;end end break;end if (v163==0) then v164=1058 -(76 + 982);v165=nil;v163=1;end end end v48[8 -5]=v21();v99=2;end if (v99~=2) then else v44=2 + 0;break;end end break;end end end if (v44==(0 -0)) then local v100=0;local v101;while true do if (v100==0) then v101=0 + 0;while true do if (v101~=(0 + 0)) then else local v128=0;while true do if (v128~=0) then else v45={};v46={};v128=1;end if (v128~=1) then else v101=1;break;end end end if (v101~=(1 + 0)) then else local v129=0;while true do if (v129==(1 -0)) then v101=2;break;end if (v129~=(0 -0)) then else v47={};v48={v45,v46,nil,v47};v129=1;end end end if (v101~=(482 -(59 + 421))) then else v44=1;break;end end break;end end end v92=1;end if (v92==(1 + 0)) then v70=1;break;end end end end break;end end end break;end if (v43==(1 + 0)) then v46=nil;v47=nil;v43=2;end end end v29=nil;v17=7;end if (v17==2) then function v21()local v51=v1(v15,v18,v18);v18=v18 + 1;return v51;end v22=nil;function v22()local v52,v53=v1(v15,v18,v18 + 1 + 1);v18=v18 + 1 + 1;return (v53 * (294 -(7 + 31))) + v52;end v17=3;end if (v17==7) then function v29(v35,v36,v37)local v54=0;local v55;local v56;local v57;while true do if (v54==0) then v55=v35[1];v56=v35[2];v54=1;end if (v54==1) then v57=v35[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v11("#",...) -1;local function v76()local v77=v55;local v78=Const;local v79=v56;local v80=v57;local v81=v27;local v82={};local v83={};local v84={};for v90=(2526 -(383 + 1599)) -((1606 -(323 + 979)) + 240),v75 do if ((v90>=v80) or ((2366 + 305)<=184)) then v82[v90-v80]=v74[v90 + 1 + 0];else v84[v90]=v74[v90 + 1];end end local v85=(v75-v80) + (529 -(372 + 156));local v86;local v87;while true do local v91=0 + 0;while true do if (((5895 -((2450 -(969 + 785)) + 1192))>(426 + 869 + (3163 -(399 + 537)))) and (v91==1)) then if (((3085 -(241 + 235))<=(4642 -(76 + 521))) and (v87<=(23 -12))) then if (((661 + 2269)==(900 + 2030)) and (v87<=(478 -(355 + 118)))) then if (((4477 + 125)>=(2186 -(992 + 350))) and (v87<=(7 -5))) then if (((611 -(27 + 15))>=(77 + 20)) and (v87<=(0 -0))) then local v103=1765 -(208 + 760 + 797);local v104;local v105;while true do if ((v103==(0 + 0)) or (3958==(4758 -(40 + 3)))) then local v167=1824 -(1524 + 300);while true do if (((0 + 0)==v167) or ((1246 + 1850)<=(1738 + 601))) then v104=0;v105=nil;v167=587 -(344 + 242);end if (((4840 -(664 + 2))>=2471) and (v167==(1799 -(250 + 1548)))) then v103=(1 -0) + 0;break;end end end if (((4154 -(226 + 186))>=774) and (v103==(1477 -(1005 + 471)))) then while true do if ((v104==(595 -(575 + 20))) or ((3563 -(218 + 654))==(6742 -3160))) then v105=v86[1795 -(925 + 868)];v84[v105](v12(v84,v105 + (1 -0),v73));break;end end break;end end elseif (((4611 -2617)<=(2169 + 1235)) and (v87>((940 -(936 + 3)) + 0))) then local v130=(2565 -(1134 + 667)) -(255 + 509);local v131;local v132;local v133;local v134;while true do if ((v130==(0 -0)) or ((5676 -(967 + 717))==(595 + 2724))) then v131=0 -0;v132=nil;v130=2 -1;end if ((v130==2) or (2005<(1342 -(127 + 258)))) then while true do if (((461 + 2967 + 948)==((12444 + 7880) -15948)) and (v131==1)) then v134=v84[v132 + 1 + 0 + 1];if (((51 + 248)<=(2522 -(1123 + 19))) and (v134>(0 -0))) then if ((v133>v84[v132 + (1090 -(164 + 925))]) or ((4198 -2373)>=(3910 + 762))) then v72=v86[3 + 0];else v84[v132 + 3 + 0]=v133;end elseif (((6615 -3068)<=(5182 -(162 + 400))) and (v133<v84[v132 + (1390 -((2690 -(121 + 1397)) + 217))])) then v72=v86[5 -2];else v84[v132 + (6 -(459 -(251 + 205)))]=v133;end break;end if (((2206 -(184 + 40))>=(3366 -(163 + 1739))) and (v131==0)) then v132=v86[2 + 0];v133=v84[v132];v131=887 -(460 + 426);end end break;end if (((2 -1)==v130) or ((2042 + 2924)<=(3989 -(611 + 26)))) then v133=nil;v134=nil;v130=(2 + 5) -(14 -9);end end else local v135=1544 -(44 + 1500);local v136;local v137;local v138;local v139;while true do if (((3 -2)==v135) or (2559==((281 -151) + 33 + 26))) then local v174=0;while true do if (((3591 -(1680 + 130))<((5114 -(450 + 1189)) -(867 + 419))) and (v174==0)) then v138=nil;v139=nil;v174=1645 -(1346 + 298);end if ((v174==1) or (4682<=(2416 + 597))) then v135=2;break;end end end if (((647 -(191 + 454))==v135) or ((6037 -(184 + 1263))<=2321)) then while true do if (((1454 -(69 + 109))==(424 + 852)) and (v136==(1148 -(615 + 531)))) then for v202=1269 -(1150 + 118),v86[31 -(7 + 20)] do local v203=0 -0;local v204;while true do if ((v203==(0 + 0)) or ((1875 + 167)>(3588 -(56 + 906)))) then v72=v72 + ((2404 -(213 + 608)) -(1474 + 108));v204=v77[v72];v203=1 + 0;end if ((v203==(1 + 0)) or (4433<=(152 + 1058))) then if ((v204[3 -2]==(41 -24)) or ((1488 -599)>(1789 + 1472))) then v139[v202-(1 + 0)]={v84,v204[813 -(700 + 110)]};else v139[v202-(1864 -(693 + 1170))]={v36,v204[3]};end v83[ #v83 + (1296 -(723 + 429 + 143))]=v139;break;end end end v84[v86[2]]=v29(v137,v138,v37);break;end if (((0 -0)==v136) or ((4979 -2323)<(3327 -2201))) then local v195=0 -0;while true do if ((v195==0) or ((847 + 1879)==518)) then local v213=0 -0;while true do if ((v213==(0 -(0 -0))) or (2160<=(4 + 238))) then v137=v79[v86[3]];v138=nil;v213=1;end if ((4984>=(361 + 516)) and (v213==(1 + 0))) then v195=1551 -((113 -57) + 1494);break;end end end if (((1556 + 219)>=(638 + 830)) and (v195==(1 + 0))) then v136=(1935 -(1077 + 144)) -(240 + 473);break;end end end if (((1 + 0)==v136) or (751<=(320 + 107))) then local v196=0 -0;local v197;while true do if (((0 + 0)==v196) or ((918 + 1288)>=(3973 + 812))) then v197=369 -(171 + 198);while true do if (((1085 + 493)<=(14727 -10791)) and (v197==(924 -(803 + 121)))) then v139={};v138=v9({},{__index=function(v228,v229)local v235=0;local v236;local v237;while true do if (((379 + 37 + 66)<=(2242 -((1893 -(149 + 932)) + 532))) and (v235==1)) then while true do if ((3008==3008) and (v236==(89 -((104 -36) + 21)))) then v237=v139[v229];return v237[1 -0][v237[4 -2]];end end break;end if (((5876 -4644)>=((1088 + 192) -855)) and (v235==(1523 -(1246 + 277)))) then v236=0;v237=nil;v235=2 -1;end end end,__newindex=function(v230,v231,v232)local v238=0 -0;local v239;local v240;while true do if (((1 + 0)==v238) or ((7437 -4460)<(2408 -(524 + 1231)))) then while true do if (((18743 -13861)==(4069 + 813)) and (v239==(0 + 0))) then v240=v139[v231];v240[1][v240[6 -4]]=v232;break;end end break;end if (((702 + 3229)>=2287) and (v238==(0 -0))) then v239=0 + 0 + 0;v240=nil;v238=1 + 0;end end end});v197=1 -0;end if (((7142 -3024)==(4598 -(160 + 320))) and (v197==(3 -2))) then v136=6 -4;break;end end break;end end end end break;end if (((5329 -2231)>(5360 -4246)) and (v135==((0 -0) -0))) then local v175=0;while true do if ((v175==(0 -0)) or ((3627 -(219 + 51))>=((30992 -19750) -(3390 + 3882)))) then v136=0 -(0 -0);v137=nil;v175=1 + 0 + 0;end if ((v175==(1 -0)) or ((2055 + 579)<=(487 + 1369))) then v135=(1 + 1) -1;break;end end end end end elseif (((39 + 544)<=((1651 -(409 + 468)) + 94 + 5)) and (v87<=((1238 -(15 + 70)) -(1045 + 105)))) then local v106=0;local v107;local v108;local v109;local v110;while true do if ((v106==(0 -0)) or ((4758 -(1159 + 69))>(5300 -(600 + 672)))) then v107=v86[1056 -(147 + 907)];v108,v109=v81(v84[v107](v12(v84,v107 + ((205 + 191) -(172 + (789 -(394 + 172)))),v86[3 -0])));v106=1 + 0 + (521 -(62 + 459));end if (((2077 -(156 + (805 -(148 + 334))))<=(4052 -(214 + 487))) and (1==v106)) then v73=(v109 + v107) -(1 -0);v110=194 -(111 + 83);v106=9 -(352 -(260 + 85));end if ((v106==(1 + 1)) or ((2118 + (6966 -5325))==(11008 -8096))) then for v170=v107,v73 do local v171=0 + 0;local v172;local v173;while true do if ((((2269 -(707 + 212)) -(420 + 4))>(2309 -(990 + 846))) and (v171==(1 + 0 + 0))) then while true do if (((229 + 604 + 502)>((3931 -(1449 + 371)) -(863 + 593))) and (0==v172)) then v173=0;while true do if ((2103<=(2033 + 2537)) and (v173==(1506 -(1236 + 270)))) then v110=v110 + 1;v84[v170]=v108[v110];break;end end break;end end break;end if ((v171==(0 -0)) or ((3756 -2395)>=(3017 -(764 + 855)))) then v172=0 -(0 -0);v173=nil;v171=4 -3;end end end break;end end elseif (((4634 -(18 + 9))>=(2307 + 518)) and (v87==(9 -5))) then do return;end else local v140=0;local v141;local v142;local v143;while true do if (((2990 -1250)<4469) and (v140==(0 + (197 -(168 + 29))))) then local v176=0;while true do if ((v176==(0 + (0 -0))) or ((17165 -12299)==(605 + 2272))) then v141=v86[1 + 1 + 0];v142=v84[v141 + 1 + 1];v176=1290 -(219 + 1070);end if ((v176==(1 + 0)) or (((4220 -2310) + 400)==(791 -467))) then v140=1;break;end end end if (((6850 -4758)>(108 + 370)) and (v140==((1855 -(426 + 746)) -((292 -146) + 535)))) then if ((v142>(0 + 0)) or ((7249 -2514)<=200)) then if (((8369 -5542)==2827) and (v143<=v84[v141 + 1 + 0])) then local v205=0 + 0;local v206;while true do if ((v205==0) or ((6153 -(1666 + 2))<=(309 + 2644))) then v206=(1295 -(403 + 626)) -(186 + 80);while true do if ((v206==0) or ((239 + 564)>(1491 -557))) then v72=v86[1 + 2];v84[v141 + (10 -7)]=v143;break;end end break;end end end elseif (((4602 -(1031 + 504))<=3873) and (v143>=v84[v141 + 1 + 0])) then local v207=356 -(199 + 157);local v208;while true do if (((1485 + 273)>834) and (v207==(0 -0))) then v208=0 -0;while true do if ((v208==0) or ((1039 + 720)<(3266 -(176 + 1445)))) then v72=v86[5 -2];v84[v141 + (1406 -(940 + 463))]=v143;break;end end break;end end end break;end if ((v140==(2 -1)) or ((3145 -(62 + 12))<=(949 -(46 + 191)))) then v143=v84[v141] + v142;v84[v141]=v143;v140=430 -(83 + 345);end end end elseif (((3644 -(486 + 409))<3838) and (v87<=(4 + 4))) then if ((v87<=6) or (3296<=(442 + 9))) then local v111=1955 -(890 + 1065);local v112;local v113;local v114;local v115;while true do if (((1591 -(416 + 1175))==v111) or ((948 + 2489)==(459 -(7 + 8)))) then v112=0 -0;v113=nil;v111=481 -(61 + (1461 -(420 + 622)));end if ((v111==((2 -1) + 0)) or ((3303 + 1172)<1829)) then v114=nil;v115=nil;v111=1 + 1;end if ((2176<=(14329 -(25323 -15493))) and (v111==(688 -(462 + 224)))) then while true do if (((2686 + 48)<((6014 -(151 + 991)) -(6 + 91))) and (v112==(0 -0))) then v113=0;v114=nil;v112=290 -(201 + 88);end if ((v112==((1672 -(1351 + 320)) -0)) or ((235 -73)>(3301 -720))) then v115=nil;while true do if ((v113==(0 + 0)) or ((8360 -3362)<985)) then local v209=1706 -(1028 + (2059 -1381));local v210;while true do if (((2639 -(960 + 739))==940) and (v209==((0 -0) + 0))) then v210=0;while true do if ((v210==(1010 -(353 + 657))) or ((1795 -(927 + 80))<(760 -(673 -(9 + 303))))) then v114=v86[2];v115=v84[v86[(101 + 991) -(474 + 615)]];v210=2 -1;end if ((v210==(1229 -(728 + (1358 -858)))) or (4973<=4177)) then v113=1721 -(610 + 1110);break;end end break;end end end if ((v113==(1880 -(1518 + (1068 -(582 + 125))))) or ((4984 -(3567 -1447))>=2952)) then v84[v114 + (2 -1)]=v115;v84[v114]=v115[v86[4]];break;end end break;end end break;end end elseif ((v87==(1482 -(141 + 1334))) or ((5196 -(206 + 1092))<3598)) then local v144=382 -(278 + 104);local v145;local v146;while true do if (((1343 -800)<3186) and (v144==(1010 -(854 + 155)))) then while true do if (((8949 -4870)>2580) and (v145==(0 -0))) then v146=v86[5 -3];v84[v146]=v84[v146](v12(v84,v146 + (1587 -((2026 -(1734 + 13)) + 1307)),v73));break;end end break;end if ((v144==(0 -0)) or (2734==1869)) then local v178=0;while true do if ((4652>(4873 -(560 + 679))) and (v178==1)) then v144=1486 -(853 + 632);break;end if (((3791 + 527)>=(2057 + 4)) and (((344 + 20) -(267 + 97))==v178)) then v145=0 + 0;v146=nil;v178=3 -2;end end end end else local v147=0 + 0;local v148;local v149;while true do if (((580 + 2174)>(591 + 1046)) and (v147==(1811 -(1805 + 5)))) then while true do if ((1346<(1166 + 1002)) and (v148==(0 -(1482 -(239 + 1243))))) then v149=v86[(6 -4) + 0];v84[v149]=v84[v149]();break;end end break;end if ((183<=(53 + 184 + 138)) and (v147==0)) then v148=1920 -(137 + 292 + 1491);v149=nil;v147=1;end end end elseif (((1113 + 2)<=(3191 -(181 + 174 + 35))) and (v87<=(3 + 6))) then local v116=0;local v117;local v118;local v119;while true do if ((v116==(1832 -(1480 + 352))) or ((27 + 96)>1864)) then v117=1346 -(396 + 950);v118=nil;v116=1 + 0;end if ((v116==(1527 -(1398 + 128))) or ((973 + 3597)<=(1485 -(600 + 389)))) then v119=nil;while true do if ((v117==(0 -0)) or ((3453 -(1331 + 144))>(12606 -7700))) then local v188=0;while true do if (((3848 -1853)<(2619 + 580)) and ((4 -3)==v188)) then v117=1669 -(20 + 1648);break;end if ((0==v188) or (((11 + 1823) -(263 + 857 + 641))>(13503 -9906))) then v118=v86[2 + 0];v119={};v188=1 + 0;end end end if ((v117==1) or ((264 + 2821)<(1314 + 1670))) then for v190=930 -(686 + 243), #v83 do local v191=0;local v192;local v193;while true do if ((v191==(2 -(1 + 0))) or ((2214 -(86 + 146))>(4256 -(464 + 561)))) then while true do if ((v192==(0 -0)) or ((1649 -542)==771)) then v193=v83[v190];for v221=0, #v193 do local v222=0;local v223;local v224;local v225;local v226;while true do if ((v222==((97 + 1592) -((256 -166) + 1598))) or ((2097 + 836)==((23261 -5710) -13324))) then v225=nil;v226=nil;v222=1653 -(1361 + 290);end if ((((12198 -9594) -(584 + 93))>=(2348 -1363)) and ((1861 -(1448 + 411))==v222)) then while true do if (((5678 -2665)>(2005 -((1322 -(1187 + 127)) + (2107 -392)))) and (v223==((1963 -712) -(777 + 473)))) then v226=v224[1 + 1];if (((v225==v84) and (v226>=v118)) or ((11 + 75)>=(3497 + 286))) then local v249=0;while true do if ((v249==(120 -(96 + 24))) or ((2287 + 595)<=(4245 -(121 + 1757)))) then v119[v226]=v225[v226];v224[1254 -(976 + 277)]=v119;break;end end end break;end if ((v223==0) or ((1825 -999)==(1790 -(215 + 74)))) then local v247=0 + 0;while true do if ((v247==(2 -1)) or ((6915 -2827)==(3593 + 1219))) then v223=2 -1;break;end if ((v247==(197 -(98 + 99))) or ((13 + 4)>(137 + 913))) then v224=v193[v221];v225=v224[2 -1];v247=2 -(1 + 0);end end end end break;end if (((5832 -(290 + 819))>=3405) and (v222==(0 + 0))) then v223=0 -0;v224=nil;v222=3 -2;end end end break;end end break;end if ((v191==(0 -0)) or (3878>(14744 -10489))) then v192=0;v193=nil;v191=1;end end end break;end end break;end end elseif (((248 + 843)>=(1361 -(173 + 223))) and (v87>10)) then v84[v86[79 -((1438 -(1161 + 210)) + 10)]]=v37[v86[1 + 2]];else local v151=1036 -(718 + 318);local v152;local v153;local v154;while true do if ((v151==1) or (1664>=3260)) then v154=nil;while true do if (((4869 -2642)<=(626 + 3644)) and (v152==1)) then while true do if (((4229 -1405)<=(21423 -17039)) and (v153==(0 + 0))) then v154=v86[2 + 0];v84[v154](v12(v84,v154 + 1,v86[2 + 1]));break;end end break;end if ((v152==(0 -0)) or (1113==(2317 -(19 + 1786)))) then local v200=0 -0;while true do if (((3889 -(1662 + 12))>(2683 -((3849 -2812) + 762))) and (v200==0)) then v153=1558 -(666 + 892);v154=nil;v200=1319 -(144 + 1174);end if ((v200==(1929 -(722 + 1206))) or ((4775 -3288)>3211)) then v152=272 -(131 + 140);break;end end end end break;end if (((54 + 1852)==(2607 -701)) and (0==v151)) then v152=0 -0;v153=nil;v151=1;end end end elseif (((592 + 645)>=(2072 -(1337 + 210))) and (v87<=(14 + (4 -1)))) then if ((v87<=(45 -31)) or ((225 + 454)>=(5245 -(1613 + 87)))) then if ((((322 + 147) -241)<=(6247 -3841)) and (v87<=(710 -(18 + 680)))) then local v120=0 + 0;local v121;local v122;while true do if ((680==(1268 -(65 + 523))) and (v120==0)) then v121=0;v122=nil;v120=1;end if ((v120==(1 + 0 + 0)) or ((634 -(327 + (794 -524)))>=(3375 -(582 + 801)))) then while true do if ((v121==((704 + 53) -(609 + 148))) or ((1827 -(1287 + 96))>(124 + 1804))) then v122=v86[1172 -(914 + 256)];v84[v122]=v84[v122](v12(v84,v122 + (1558 -(10 + 1547)),v86[8 -5]));break;end end break;end end elseif ((((5024 -2377) -1900)<(1248 + 2766)) and (v87>(3 + 10))) then v84[v86[2]]=v86[3];else v84[v86[2 + 0]]=v84[v86[1629 -(942 + 684)]][v86[729 -(108 + 617)]];end elseif ((v87<=15) or ((606 -(598 -255))==(5981 -(1049 + 91)))) then if ((47==(166 -119)) and (v84[v86[2 + 0]]==v86[2 + 2])) then v72=v72 + (1 -0);else v72=v86[5 -2];end elseif (((585 + 86)<=(5592 -(2267 + 1663))) and (v87>16)) then v84[v86[1238 -(719 + 517)]]=v84[v86[3]];else v72=v86[1 + 1 + 1];end elseif (((12127 -8710)==((13287 -(649 + 49)) -9172)) and (v87<=(17 + 3))) then if (((955 -340)<=3883) and (v87<=18)) then if ((2861<(4999 -(877 + 722))) and (v86[912 -(880 + 30)]==v84[v86[1719 -(474 + (4804 -3563))]])) then v72=v72 + ((1794 -(1457 + 336)) -0);else v72=v86[5 -2];end elseif (((8894 -(5481 + 156))==(4045 -(418 + 370))) and (v87>(16 + 3))) then local v158=0 -0;local v159;while true do if (((1963 -461)==(3197 -(233 + 1462))) and (0==v158)) then v159=v86[416 -(191 + 223)];v84[v159](v84[v159 + (1 -0)]);break;end end else v84[v86[1 + 1]]=v36[v86[(1450 + 355) -(1584 + 218)]];end elseif (((2758 -1015)<(5881 -(563 + 1300))) and (v87<=(1373 -(676 + 676)))) then v84[v86[5 -3]]=v29(v79[v86[5 -2]],nil,v37);elseif ((v87==(19 + 2 + 1)) or (3298<=((24518 -15098) -6440))) then v84[v86[2]]=v86[3]~=(1332 -(1062 + 270));else for v168=v86[2],v86[3 + (0 -0)] do v84[v168]=nil;end end v72=v72 + (2 -1);break;end if ((v91==0) or ((421 + 1385)>(5173 -(3 + 68 + 478)))) then local v95=0;while true do if (((1579 + 586)==2165) and ((1847 -(910 + 936))==v95)) then v91=710 -(402 + 307);break;end if ((4203>(3793 -(539 + 555))) and (v95==0)) then v86=v77[v72];v87=v86[2 -1];v95=1;end end end end end end A,B=v27(v10(v76));if  not A[1] then local v88=0;local v89;while true do if (v88==0) then v89=v35[4][v72] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end end end return v29(v28(),{},v16)();end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==3) then v23=nil;function v23()local v58,v59,v60,v61=v1(v15,v18,v18 + (1424 -(653 + 768)));v18=v18 + (8 -4);return (v61 * (10145310 + 6631906)) + (v60 * (109043 -43507)) + (v59 * (243 + (28 -15))) + v58;end v24=nil;v17=4;end end end vv8());end
